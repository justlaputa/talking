!!!5
html
  head
    meta(charset="utf-8")
    title How do we develop javascript in CLM project
    meta(name="description", content="Presentation about clm-javascript")
    meta(name="author", content="Han Xiao")
    meta(name="apple-mobile-web-app-capable", content="yes")
    meta name="apple-mobile-web-app-status-bar-style" content="black-translucent")

    meta(name="viewport", content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no")

    link(rel="stylesheet", href="css/reveal.min.css")
    link(rel="stylesheet", href="css/theme/serif.css", id="theme")

    link(rel="stylesheet", href="css/github.css")

    <!-- If the query includes 'print-pdf', use the PDF print sheet -->
    script
      document.write( '<link rel="stylesheet" href="css/print/' + ( window.location.search.match( /print-pdf/gi ) ? 'pdf' : 'paper' ) + '.css" type="text/css" media="print">' );

    <!--[if lt IE 9]>
    script(src="lib/js/html5shiv.js")
    <![endif]-->
  body
    .reveal
      .slides
        section
          h2 Javascript Project in CLM
        section
          h3 What I'm gonna share
          ul
            li Js project structure of CLM
            li Why we use RequireJS
        section
          h3 Then
          ul
            li BDD with Jasmine
            li Test js in browsers
            li Why we switch to Test'em
            li Get coverage and use Sonar
            li Integrate with Jenkins
        section
          h3 Structure of our JS code
        section
          img(src="img/CLM-JS-Structure.svg")
        section
          h3 Why <a>DOM-SERVICE-API</a>
          ul
            li Simple
            li Testable
            li Maintainable
        section
          h2 Simple is everything
          ul
            li DOM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-> jQuery
            li SERVICE -> Call api
            li API&nbsp;&nbsp;&nbsp;&nbsp;&nbsp&nbsp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-> Already there
        section
          h2 Easy to test
          ul
            li DOM: mock jQuery
            li SERVICE: mock API
            li API: we do not need
        section
          h2 About maintainence
          p We need <strong style="color: red;">RequireJS</strong>
        section
          h2 Without RequireJS
          pre
            code(contenteditable)
              &lt;head&gt;
              &lt;script src=&quot;lib/customLib/scorm-api-adapter.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;lib/copiedLib/eventbus.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;lib/copiedLib/lib/jquery.i18n.properties-1.0.9.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;lib/copiedLib/localizer.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/lib/base64.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/lib/bootstrap.min.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/lib/html5.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/lib/jquery-1.8.1.min.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/lib/SCORM_12_APIWrapper.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/lib/useragents.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/entity/enums.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/entity/globalVariables.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/event/event.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/dom/examDom.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/dom/finishDom.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/dom/initDom.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/dom/messageDom.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/dom/noteDom.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/dom/noteListDom.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/dom/pageJumpDom.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/dom/statusDom.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/dom/videoDom.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/api/examApi.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/api/finishApi.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/api/initApi.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/api/noteApi.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/api/pageJumpApi.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/api/statusApi.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/api/videoApi.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/service/examService.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/service/finishService.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/service/initService.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/service/messageService.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/service/noteListService.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/service/noteService.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/service/pageJumpService.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/service/statusService.js&quot;&gt;&lt;/script&gt;
              &lt;script src=&quot;/src/main/js/service/videoService.js&quot;&gt;&lt;/script&gt;
              &lt;/head&gt;
        section
          h3 What's the problem?
          ul
            li Individual HTTP request for each &lt;script&gt;
            li Dependency management is hard
        section
          h3 Asynchronous Module Definition
          p Define module with Dependencies
          br
          p DOM.js depends on jQuery
          pre
            code(contenteditable)
              | define(['jquery', 'exports', 'bootstrap'], function($, exports) {
              |   ...
              | })
          br
          p SERVICE.js depends on DOM and API
          pre
            code(contenteditable)
              | define(['xxxDom', 'xxxAPI', 'eventbus'], function(dom, api, eventbus) {
              |   ...
              | })
        section
          h3 Using RequireJS
          pre
            code(contenteditable)
              &lt;head&gt;
              &nbsp;&nbsp;&lt;script data-main=&quot;/js/main&quot; src=&quot;/js/lib/require.js&quot;&gt;&lt;/script&gt;
              &lt;/head&gt;
          p main.js
          pre
            code(contenteditable)
              | require(['toolbarService',
              |          'coursePaneService',
              |          'courseListService',
              |          'examPageService',
              |          'examQuestionService',
              |          'examToolbarService',
              |          'notificationService',
              |          'previewService',
              |          'signUpService',
              |          'userControllService',
              |          'changePasswordService',
              |          'keywordService',
              |          'validateService',
              |          'scorm-api-adapter',
              |          'auto-scroll',
              |          'adminPageService'])
        section
          h3 Code Optimization
          p using <strong>r.js</strong>
          pre
            code(contenteditable)
              | $ cat app.build.js
              | ({
              |    appDir: "../",
              |    baseUrl: "js",
              |    dir: "../../target",
              |    modules: [
              |        {
              |            name: "main"
              |        }
              |    ]
              | })
              | $ node r.js -o app.build.js
        section
          h3 Questions for 1st Part
        section
          h1 Part 2: Test
        section
          h2 We do BDD with Jasmine
        section
          h3 BDD is <strong>writable</strong> & <strong>readable</strong>
          pre
            code(contenteditable)
              | describe("click add new question button", function() {
              |   describe("when add questions in one page", function() {
              |     it("should send the right sequence number", function() {
              |       //Write you test here
              |     });
              |   });
              | });
        section
          h3 Jasmine
          h4 writing test naturally
          pre
            code(contenteditable)
              | expect(sum).toEqual(10);
              | expect(result).toContain("foo")
              | expect(myFunction).toHaveBeenCalled()
              | expect(myFunction).toHaveBeenCalledWith(1, 2)
        section
          h3 Read the result
          img(src="img/bdd_jasmine.png")
        section
          h3 Test in browsers
          img(src="img/browsers.jpg")
        section
          h3 JsTD
          h4 js-test-driver
          img(src="img/jstd.png")
        section
          h3 Pros & Cons:
          ul
            li Written in Java
            li Maven plugin
            li Coverage in the way
          ul
            li Inactive development
            li Not easy to run manually
            li Slow...
        section
          h3 Nobody like Slow-test
          h4 Even <span style="color: red;">Jenkins</span>
          img(src="img/jenkins.png")
        section
          h3 Switch to "Test'em"
          blockquote
            | makes it so easy that you will actually want to write tests.
        section
          h3 Why we chose it
          ul
            li By javascript runs in <strong>Node.js</strong>
            li Cross platform
            li Supports IE 7~9(by compatibility mode)
            li Integrates with Jenkins
            li Auto-refresh
        section
          h3 Written by js, runs in Node
          pre
            code(contenteditable)
              | $ npm install -g testem
              | $ testem
          img(src="img/testem.png")
        section
          h3 Cross Platform
          h4 supports IE 7~9(by compatibility mode)
          pre
            code(contenteditable)
              | $ testem launchers
        section
          h3 Auto Refresh
          h4 make writing test fun
        section
          img(src="testem_autorefresh.png")
        section
          h3 Incredibly Fast
        section
          h3 Coverage
        section
          h3 Why we need coverage
        section
          h3 Code coverage === Coverage of <strong>Test</strong>
        section
          h3 High coverage === Highly Tested code
        section
          h3 Highly Tested === Easy to Refactor
        section
          h3 So, We need to get coverage
          h4 In "Test'em"
        section
          h3 How
          ul
            li Instrument with node-jscoverage
            li Using PhantomJS as launcher
            li Inject lcov-reporter into browser
        section
          h3 Using Sonar to visualize it
        section
          h3 Integrate with Jenkins
          ul
            li run Test'em in POST build script
            li use TAP as reporter
        section
          h2 Thanks for coming!
    script(src="lib/js/head.min.js")
    script(src="js/reveal.min.js")

    script
      // Full list of configuration options available here:
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
        controls: true,
        progress: true,
        history: true,
        center: true,

        theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
        transition: Reveal.getQueryHash().transition || 'none', // default/cube/page/concave/zoom/linear/fade/none

        // Optional libraries used to extend on reveal.js
        dependencies: [
          { src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
          { src: 'plugin/markdown/showdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
          { src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
          { src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
          { src: 'plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
          { src: 'plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
          // { src: 'plugin/remotes/remotes.js', async: true, condition: function() { return !!document.body.classList; } }
        ]
      });
